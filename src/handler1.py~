import numpy as np
import os
from sklearn.naive_bayes import MultinomialNB
from sklearn.naive_bayes import GaussianNB
from sklearn.naive_bayes import BernoulliNB
from sklearn.ensemble import RandomForestClassifier
from sklearn import svm
from sklearn import metrics

# preparing data

def getFilesData(start_path):
	
	listTeamsData = []
	teams_file_names = os.listdir(start_path)

	for i in range(0, len(teams_file_names), 1):
		listTeamsData.append(open(start_path + "/" + teams_file_names[i], 'r'))
	return listTeamsData

def getBatch(listParams, start, finish, X_batch, Y_batch):
	count1=0
	count2=0
	for i in range (start, finish, 1):
		game_x = []
		params = listParams[i].split(";")

		team_1 = params[0]
		team_2 = params[1]
		
		goals_1 = int(params[2])
		goals_2 = int(params[3])

		
		game_x.append(team_1)
		game_x.append(team_2)
		
		if goals_1 > goals_2:
			game_y = 'team1 wins'
		elif goals_1 < goals_2:
			game_y = 'team2 wins'
		else:
			game_y = 'draw'

		X_batch.append(game_x)
		Y_batch.append(game_y)

def selectNonRepeatingData(X_list, Y_list, X_set, Y_set):
	y_delete_indexes = [] 
	for i in range(0, len(X_list), 1):
		elem = X_list[i];
		if elem not in X_set:
			X_set.append(elem)
		else:
			y_delete_indexes.append(i)
	
	for i in range(0, len(Y_list), 1):
		if i not in y_delete_indexes:
			Y_set.append(Y_list[i])


if __name__ == '__main__':
	start_path = "../txt"
	teams_files = getFilesData(start_path)

	X_list = []
	Y_list = []

	allGamesCount = 0
	for team_file in teams_files:
		team_games = team_file.readlines()
		#prepare train_batch
		getBatch(team_games, 0, len(team_games) , X_list, Y_list)
		allGamesCount = allGamesCount + len(team_games)

	
	print '*************************************************************'
	print X_list
	print '*************************************************************'
	print Y_list
	print '*************************************************************'
	print len(X_list)
	print '*************************************************************'
	print len(Y_list)





